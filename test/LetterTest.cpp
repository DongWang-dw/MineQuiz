/*
___________              __      _____.__.__                      
\__    ___/___   _______/  |_  _/ ____\__|  |   ____              
  |    |_/ __ \ /  ___/\   __\ \   __\|  |  | _/ __ \             
  |    |\  ___/ \___ \  |  |    |  |  |  |  |_\  ___/             
  |____| \___  >____  > |__|    |__|  |__|____/\___  >            
             \/     \/                             \/             
________                                                          
\______ \   ____   ____    ____   __  _  _______    ____    ____  
 |    |  \ /  _ \ /    \  / ___\  \ \/ \/ /\__  \  /    \  / ___\ 
 |    `   (  <_> )   |  \/ /_/  >  \     /  / __ \|   |  \/ /_/  >
/_______  /\____/|___|  /\___  /    \/\_/  (____  /___|  /\___  / 
        \/            \//_____/                 \/     \//_____/  
*/

#include <ncurses.h>
#include <string>
int main()
{	
	initscr();			        /* Start curses mode 	       	  */
    //width max 64                                                             
    printw(",--.   ,--.,--.                    ,-----.           ,--.\n");        
    printw("|   `.'   |`--',--,--,  ,---.     '  .-.  '  ,--.,--.`--',-----.\n"); 
    printw("|  |'.'|  |,--.|      \\| .-. :    |  | |  |  |  ||  |,--.`-.  /\n");  
    printw("|  |   |  ||  ||  ||  |\\   --.    '  '-'  '-.'  ''  '|  | /  `-.\n"); 
    printw("`--'   `--'`--'`--''--' `----'     `-----'--' `----' `--'`-----'\n\n"); 
    
                                                                                
    printw("    /|    //| |                               //    ) )                     \n"); 
    printw("   //|   // | |    ( )   __      ___         //    / /          ( )  ___    \n"); 
    printw("  // |  //  | |   / / //   ) ) //___) )     //    / / //   / / / /     / /  \n"); 
    printw(" //  | //   | |  / / //   / / //           //  \\ \\ / //   / / / /     / / \n");  
    printw("//   |//    | | / / //   / / ((____       ((____\\ \\ ((___( ( / /     / /_\n\n");  
    
    printw("::::    ::::  ::::::::::: ::::    ::: ::::::::::       ::::::::  :::    ::: ::::::::::: :::::::::\n"); 
    printw("+:+:+: :+:+:+     :+:     :+:+:   :+: :+:             :+:    :+: :+:    :+:     :+:          :+: \n");
    printw("+:+ +:+:+ +:+     +:+     :+:+:+  +:+ +:+             +:+    +:+ +:+    +:+     +:+         +:+  \n");
    printw("+#+  +:+  +#+     +#+     +#+ +:+ +#+ +#++:++#        +#+    +:+ +#+    +:+     +#+        +#+   \n");
    printw("+#+       +#+     +#+     +#+  +#+#+# +#+             +#+  # +#+ +#+    +#+     +#+       +#+    \n");
    printw("#+#       #+#     #+#     #+#   #+#+# #+#             #+#   +#+  #+#    #+#     #+#      #+#     \n");
    printw("###       ### ########### ###    #### ##########       ###### ### ########  ########### #########\n\n");
    
    printw("      .-.                           .`-,                 \n"); 
    printw("        /|/|    .-.                /    )        .-.     \n"); 
    printw("       /   |    `-'.  .-.   .-.   /    /)  (     `-'.-.  \n"); 
    printw("      /    |   /    )/   )./.-'_ (    /(    )   /      )_\n"); 
    printw(" .-' /     |_.(__. '/   ( (__.'   `--`-.`--':_.(__. (   )\n"); 
    printw("(__.'      `.            `-             '-           `-' \n\n");

	const char *oop[6];
	oop[0]= "                        .-.                               \n";
	oop[1]= "   .--.    .-.--.    .-(_) )-.                            \n";
	oop[2]= "  /    )`-' /    )`-'     /   \\                           \n";
	oop[3]= " /    /    /    /        /     )                          \n";
	oop[4]= "(    /    (    /      .-/  `--'                           \n";
	oop[5]= " `-.'      `-.'      (_/                                  \n";
	for(int i=0; i<6; i++)
	{
		printw("%s",oop[i]);
	}

	//printw("Hello World !!!\n");	/* Print Hello World		      */
	refresh();			        /* Print it on to the real screen */
    getch();			        /* Wait for user input            */
	endwin();			        /* End curses mode		          */

	return 0;
}
                                                                
